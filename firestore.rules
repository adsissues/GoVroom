rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection:
    // - Authenticated users can read their own document.
    // - Admins can read all user documents.
    // - Only admins can update/delete user documents.
    // - Creation is handled by Cloud Functions (bypassing client rules).
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Shipments collection (and its subcollections like 'details')
    // - All authenticated users can read shipments.
    // - Only admins can create/update/delete shipments.
    match /shipments/{shipmentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';

      // Details subcollection
      match /details/{detailId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
      }
    }

    // Dropdown collections (carriers, subcarriers, customers, services, doe, formats_*)
    // - Authenticated users can read.
    // - Only admins can write (create, update, delete).
    match /{collectionName}/{docId}
      where collectionName in ['carriers', 'subcarriers', 'customers', 'services', 'doe', 'formats', 'formats_prior', 'formats_eco', 'formats_s3c'] {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // App Settings document (stored in /app_settings/global)
    // - Authenticated users can read.
    // - Only admins can write.
    match /app_settings/{docId} {
       allow read: if request.auth != null;
       allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Default deny for any other collections not explicitly matched
    match /{document=**} {
      allow read, write: if false;
    }
  }
}